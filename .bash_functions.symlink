# .bash_functions

whattimeisit(){
	m=$(date +%M)
	h=$(date +%H)
	if [ "$h" -eq 0 ]; then
		hour="midnight"
	fi
	if [ "$m" -eq 15 ]; then
		current_time="It's quarter past $h"
	elif [ "$m" -eq 30 ]; then
		current_time="It's half past $h"
	elif [ "$m" -eq 45 ]; then
		current_time="It's quarter to $(($h + 1))"
	else 
		current_time="It's $m past $h"
	fi
	echo "$current_time"| espeak 
}

espanol(){
	if [ "$#" -eq 0 ]; then
		more ~/espanol.txt
	else 
		#Â test if the word is not previously defined
		if ! grep -q "^$1" ~/espanol.txt ; then 
			echo "$1: ${@:2}" >> ~/espanol.txt
		else 
			grep "^$1" ~/espanol.txt --color=auto
		fi
	fi
}

# git pull in all existing repositories
pull_all(){
	wc=$(pwd)
	repos=(`find ~ -name '*.git'`)
	for repo in "${repos[@]}"; do
		repo=$(echo "$repo"| sed -e 's/\.git//g')
		printf "\033[00;32m$repo\033[0m ... "
		cd && cd "$repo" && git pull 2> /dev/null|grep -v "Already up-to-date"
		if [ "$?" -ne 0 ]; then
			echo ""
		fi
	done
	cd "$wd"
}

klit(){
	if [ "$#" -eq 0 ]; then
		sed '1!G;h;$!d' ~/.achkliti |more
	else 
		echo "[$(date| sed -e 's/ (.*//g')] $@" >> ~/.achkliti
	fi
}

purge(){
	rm -rfv "$1"
}

backitup(){
	cd ~
	backup_time=$(date +%d%B%y)
	if [ -f ".backups/backup_$backup_time.tar.gz" ]; then
		rm -f ".backups/$backup_time.tar.gz"
	fi
	tar -zcf ".backups/backup_$backup_time.tar.gz" $(ls ~) >>/dev/null 2>&1 && dropbox_uploader.sh upload ".backups/backup_$backup_time.tar.gz" debian_backups && alert "Backup ended successfully."
}

# Swap two file names: $1 and $2
swap(){
	mv "$1" "$1_tmp"
	mv "$2" "$1"
	mv "$1_tmp" "$2"
}

# Find the max of a list of integers
# $1, ..., $n integers
max(){
	for number in "$@"; do echo "$number"; done| sort -nr| head -n 1
}

# Find the min of a list of integers
# $1, ..., $n integers
min(){
	for number in "$@"; do echo "$number"; done| sort -n| head -n 1
}

# automatic 'git push', requires access without password to the repository.
# When provided, $1 contains the path to the local git repository. 
# Otherwise, assume it is the cwd.
autopush(){
	if [[ "$#" -eq 1 ]]; then
		cd "$1"
	fi
	if [[ ! -d '.git' ]]; then
		echo "$(pwd) Not a git directory." && return
	else
		commit_message=$(date "+%d %B %y - %H:%M")
		git commit -a -m --quiet "[autopush] ${commit_message}" && git push --quiet
	fi
	[[ "$?" -eq 0 ]] && echo "autopush done successfully."
	if [[ "$#" -eq 1 ]]; then
		cd -
	fi
}
